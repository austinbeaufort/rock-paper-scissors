{"id":"src/display.js","dependencies":[{"name":"C:\\dev\\rock-paper-scissors\\package.json","includedInParent":true,"mtime":1573175782628},{"name":"./model","loc":{"line":1,"column":39},"parent":"C:\\dev\\rock-paper-scissors\\src\\display.js","resolved":"C:\\dev\\rock-paper-scissors\\src\\model.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _model = require(\"./model\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Display =\n/*#__PURE__*/\nfunction () {\n  function Display() {\n    _classCallCheck(this, Display);\n  }\n\n  _createClass(Display, [{\n    key: \"assign_display_score_variables\",\n    value: function assign_display_score_variables() {\n      _model.display_content.user.textContent = _model.score.user;\n      _model.display_content.computer.textContent = _model.score.computer;\n    }\n  }, {\n    key: \"update_computer_score\",\n    value: function update_computer_score() {\n      _model.score.computer++;\n      _model.display_content.computer.textContent = _model.score.computer;\n    }\n  }, {\n    key: \"update_user_score\",\n    value: function update_user_score() {\n      _model.score.user++;\n      _model.display_content.user.textContent = _model.score.user;\n    }\n  }, {\n    key: \"set_board_display_to_tie\",\n    value: function set_board_display_to_tie(user_choice, computer_choice) {\n      _model.display_content.board_display.textContent = \"(You: \".concat(user_choice, \") VS (Computer: \").concat(computer_choice, \") >>> It's a tie!!\");\n    }\n  }, {\n    key: \"set_board_display_to_loss\",\n    value: function set_board_display_to_loss(user_choice, computer_choice) {\n      _model.display_content.board_display.textContent = \"(You: \".concat(user_choice, \") VS (Computer: \").concat(computer_choice, \") >>> You lose, try again!\");\n    }\n  }, {\n    key: \"set_board_display_to_win\",\n    value: function set_board_display_to_win(user_choice, computer_choice) {\n      _model.display_content.board_display.textContent = \"(You: \".concat(user_choice, \") VS (Computer: \").concat(computer_choice, \") >>> You won! Best of 3??\");\n    }\n  }]);\n\n  return Display;\n}();\n\nvar display = new Display();\nvar _default = display;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/display.js","original":{"line":1,"column":0}},{"name":"Display","generated":{"line":16,"column":4},"source":"src/display.js","original":{"line":3,"column":6}},{"generated":{"line":25,"column":53},"source":"src/display.js","original":{"line":4,"column":37}},{"name":"display_content","generated":{"line":26,"column":0},"source":"src/display.js","original":{"line":5,"column":8}},{"name":"user","generated":{"line":26,"column":29},"source":"src/display.js","original":{"line":5,"column":24}},{"generated":{"line":26,"column":33},"source":"src/display.js","original":{"line":5,"column":8}},{"name":"textContent","generated":{"line":26,"column":34},"source":"src/display.js","original":{"line":5,"column":29}},{"generated":{"line":26,"column":45},"source":"src/display.js","original":{"line":5,"column":8}},{"name":"score","generated":{"line":26,"column":48},"source":"src/display.js","original":{"line":5,"column":43}},{"name":"user","generated":{"line":26,"column":61},"source":"src/display.js","original":{"line":5,"column":49}},{"generated":{"line":26,"column":65},"source":"src/display.js","original":{"line":5,"column":8}},{"name":"display_content","generated":{"line":27,"column":0},"source":"src/display.js","original":{"line":6,"column":8}},{"name":"computer","generated":{"line":27,"column":29},"source":"src/display.js","original":{"line":6,"column":24}},{"generated":{"line":27,"column":37},"source":"src/display.js","original":{"line":6,"column":8}},{"name":"textContent","generated":{"line":27,"column":38},"source":"src/display.js","original":{"line":6,"column":33}},{"generated":{"line":27,"column":49},"source":"src/display.js","original":{"line":6,"column":8}},{"name":"score","generated":{"line":27,"column":52},"source":"src/display.js","original":{"line":6,"column":47}},{"name":"computer","generated":{"line":27,"column":65},"source":"src/display.js","original":{"line":6,"column":53}},{"generated":{"line":27,"column":73},"source":"src/display.js","original":{"line":6,"column":8}},{"generated":{"line":28,"column":0},"source":"src/display.js","original":{"line":7,"column":5}},{"generated":{"line":31,"column":44},"source":"src/display.js","original":{"line":9,"column":28}},{"name":"score","generated":{"line":32,"column":0},"source":"src/display.js","original":{"line":10,"column":8}},{"name":"computer","generated":{"line":32,"column":19},"source":"src/display.js","original":{"line":10,"column":14}},{"generated":{"line":32,"column":27},"source":"src/display.js","original":{"line":10,"column":8}},{"name":"display_content","generated":{"line":33,"column":0},"source":"src/display.js","original":{"line":11,"column":8}},{"name":"computer","generated":{"line":33,"column":29},"source":"src/display.js","original":{"line":11,"column":24}},{"generated":{"line":33,"column":37},"source":"src/display.js","original":{"line":11,"column":8}},{"name":"textContent","generated":{"line":33,"column":38},"source":"src/display.js","original":{"line":11,"column":33}},{"generated":{"line":33,"column":49},"source":"src/display.js","original":{"line":11,"column":8}},{"name":"score","generated":{"line":33,"column":52},"source":"src/display.js","original":{"line":11,"column":47}},{"name":"computer","generated":{"line":33,"column":65},"source":"src/display.js","original":{"line":11,"column":53}},{"generated":{"line":33,"column":73},"source":"src/display.js","original":{"line":11,"column":8}},{"generated":{"line":34,"column":0},"source":"src/display.js","original":{"line":12,"column":5}},{"generated":{"line":37,"column":40},"source":"src/display.js","original":{"line":14,"column":24}},{"name":"score","generated":{"line":38,"column":0},"source":"src/display.js","original":{"line":15,"column":8}},{"name":"user","generated":{"line":38,"column":19},"source":"src/display.js","original":{"line":15,"column":14}},{"generated":{"line":38,"column":23},"source":"src/display.js","original":{"line":15,"column":8}},{"name":"display_content","generated":{"line":39,"column":0},"source":"src/display.js","original":{"line":16,"column":8}},{"name":"user","generated":{"line":39,"column":29},"source":"src/display.js","original":{"line":16,"column":24}},{"generated":{"line":39,"column":33},"source":"src/display.js","original":{"line":16,"column":8}},{"name":"textContent","generated":{"line":39,"column":34},"source":"src/display.js","original":{"line":16,"column":29}},{"generated":{"line":39,"column":45},"source":"src/display.js","original":{"line":16,"column":8}},{"name":"score","generated":{"line":39,"column":48},"source":"src/display.js","original":{"line":16,"column":43}},{"name":"user","generated":{"line":39,"column":61},"source":"src/display.js","original":{"line":16,"column":49}},{"generated":{"line":39,"column":65},"source":"src/display.js","original":{"line":16,"column":8}},{"generated":{"line":40,"column":0},"source":"src/display.js","original":{"line":17,"column":5}},{"name":"user_choice","generated":{"line":43,"column":45},"source":"src/display.js","original":{"line":19,"column":29}},{"name":"computer_choice","generated":{"line":43,"column":58},"source":"src/display.js","original":{"line":19,"column":42}},{"generated":{"line":43,"column":75},"source":"src/display.js","original":{"line":19,"column":59}},{"name":"display_content","generated":{"line":44,"column":0},"source":"src/display.js","original":{"line":20,"column":8}},{"name":"board_display","generated":{"line":44,"column":29},"source":"src/display.js","original":{"line":20,"column":24}},{"generated":{"line":44,"column":42},"source":"src/display.js","original":{"line":20,"column":8}},{"name":"textContent","generated":{"line":44,"column":43},"source":"src/display.js","original":{"line":20,"column":38}},{"generated":{"line":44,"column":54},"source":"src/display.js","original":{"line":20,"column":8}},{"name":"user_choice","generated":{"line":44,"column":73},"source":"src/display.js","original":{"line":20,"column":61}},{"generated":{"line":44,"column":84},"source":"src/display.js","original":{"line":20,"column":8}},{"name":"computer_choice","generated":{"line":44,"column":113},"source":"src/display.js","original":{"line":20,"column":91}},{"generated":{"line":44,"column":128},"source":"src/display.js","original":{"line":20,"column":8}},{"generated":{"line":45,"column":0},"source":"src/display.js","original":{"line":21,"column":5}},{"name":"user_choice","generated":{"line":48,"column":46},"source":"src/display.js","original":{"line":23,"column":30}},{"name":"computer_choice","generated":{"line":48,"column":59},"source":"src/display.js","original":{"line":23,"column":43}},{"generated":{"line":48,"column":76},"source":"src/display.js","original":{"line":23,"column":60}},{"name":"display_content","generated":{"line":49,"column":0},"source":"src/display.js","original":{"line":24,"column":8}},{"name":"board_display","generated":{"line":49,"column":29},"source":"src/display.js","original":{"line":24,"column":24}},{"generated":{"line":49,"column":42},"source":"src/display.js","original":{"line":24,"column":8}},{"name":"textContent","generated":{"line":49,"column":43},"source":"src/display.js","original":{"line":24,"column":38}},{"generated":{"line":49,"column":54},"source":"src/display.js","original":{"line":24,"column":8}},{"name":"user_choice","generated":{"line":49,"column":73},"source":"src/display.js","original":{"line":24,"column":61}},{"generated":{"line":49,"column":84},"source":"src/display.js","original":{"line":24,"column":8}},{"name":"computer_choice","generated":{"line":49,"column":113},"source":"src/display.js","original":{"line":24,"column":91}},{"generated":{"line":49,"column":128},"source":"src/display.js","original":{"line":24,"column":8}},{"generated":{"line":50,"column":0},"source":"src/display.js","original":{"line":25,"column":5}},{"name":"user_choice","generated":{"line":53,"column":45},"source":"src/display.js","original":{"line":27,"column":29}},{"name":"computer_choice","generated":{"line":53,"column":58},"source":"src/display.js","original":{"line":27,"column":42}},{"generated":{"line":53,"column":75},"source":"src/display.js","original":{"line":27,"column":59}},{"name":"display_content","generated":{"line":54,"column":0},"source":"src/display.js","original":{"line":28,"column":8}},{"name":"board_display","generated":{"line":54,"column":29},"source":"src/display.js","original":{"line":28,"column":24}},{"generated":{"line":54,"column":42},"source":"src/display.js","original":{"line":28,"column":8}},{"name":"textContent","generated":{"line":54,"column":43},"source":"src/display.js","original":{"line":28,"column":38}},{"generated":{"line":54,"column":54},"source":"src/display.js","original":{"line":28,"column":8}},{"name":"user_choice","generated":{"line":54,"column":73},"source":"src/display.js","original":{"line":28,"column":61}},{"generated":{"line":54,"column":84},"source":"src/display.js","original":{"line":28,"column":8}},{"name":"computer_choice","generated":{"line":54,"column":113},"source":"src/display.js","original":{"line":28,"column":91}},{"generated":{"line":54,"column":128},"source":"src/display.js","original":{"line":28,"column":8}},{"generated":{"line":55,"column":0},"source":"src/display.js","original":{"line":29,"column":5}},{"generated":{"line":61,"column":0},"source":"src/display.js","original":{"line":32,"column":0}},{"name":"display","generated":{"line":61,"column":4},"source":"src/display.js","original":{"line":32,"column":6}},{"generated":{"line":61,"column":11},"source":"src/display.js","original":{"line":32,"column":13}},{"generated":{"line":61,"column":14},"source":"src/display.js","original":{"line":32,"column":16}},{"name":"Display","generated":{"line":61,"column":18},"source":"src/display.js","original":{"line":32,"column":20}},{"generated":{"line":61,"column":25},"source":"src/display.js","original":{"line":32,"column":16}},{"generated":{"line":61,"column":27},"source":"src/display.js","original":{"line":32,"column":0}},{"name":"display","generated":{"line":62,"column":15},"source":"src/display.js","original":{"line":34,"column":15}}],"sources":{"src/display.js":"import { score, display_content } from './model'\r\n\r\nclass Display {\r\n    assign_display_score_variables() {\r\n        display_content.user.textContent = score.user\r\n        display_content.computer.textContent = score.computer\r\n    }\r\n\r\n    update_computer_score() {\r\n        score.computer++\r\n        display_content.computer.textContent = score.computer\r\n    }\r\n\r\n    update_user_score() {\r\n        score.user++\r\n        display_content.user.textContent = score.user\r\n    }\r\n\r\n    set_board_display_to_tie(user_choice, computer_choice) {\r\n        display_content.board_display.textContent = `(You: ${user_choice}) VS (Computer: ${computer_choice}) >>> It's a tie!!`\r\n    }\r\n    \r\n    set_board_display_to_loss(user_choice, computer_choice) {\r\n        display_content.board_display.textContent = `(You: ${user_choice}) VS (Computer: ${computer_choice}) >>> You lose, try again!`\r\n    }\r\n    \r\n    set_board_display_to_win(user_choice, computer_choice) {\r\n        display_content.board_display.textContent = `(You: ${user_choice}) VS (Computer: ${computer_choice}) >>> You won! Best of 3??`\r\n    }\r\n}\r\n\r\nconst display = new Display()\r\n\r\nexport default display"},"lineCount":null}},"error":null,"hash":"4cfc5e1eaf5502e9125066c997d53713","cacheData":{"env":{}}}